ExternalProject_Add(llvm-host-compiler-rt
    DEPENDS
        llvm-host-libcxx
    DOWNLOAD_COMMAND ""
    UPDATE_COMMAND ""
    SOURCE_DIR ${LLVM_SRC}
    LIST_SEPARATOR ,
    CONFIGURE_COMMAND ${EXEC} CONF=1 cmake -H<SOURCE_DIR>/compiler-rt -B<BINARY_DIR>
        -G Ninja
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}/lib/clang/${clang_version}
        -DCMAKE_C_COMPILER=clang
        -DCMAKE_CXX_COMPILER=clang++
        -DCMAKE_SYSTEM_NAME=${CMAKE_SYSTEM_NAME}
        -DCMAKE_AR=${CMAKE_INSTALL_PREFIX}/bin/llvm-ar
        -DCMAKE_RANLIB=${CMAKE_INSTALL_PREFIX}/bin/llvm-ranlib
        -DCMAKE_C_COMPILER_WORKS=1
        -DCMAKE_CXX_COMPILER_WORKS=1
        -DCMAKE_C_COMPILER_TARGET=${HOST_ARCH}
        -DCMAKE_CXX_COMPILER_TARGET=${HOST_ARCH}
        -DCMAKE_ASM_COMPILER_TARGET=${HOST_ARCH}
        -DLLVM_DEFAULT_TARGET_TRIPLE=${HOST_ARCH}
        -DCOMPILER_RT_DEFAULT_TARGET_ONLY=TRUE
        -DCOMPILER_RT_USE_BUILTINS_LIBRARY=TRUE
        -DCOMPILER_RT_BUILD_BUILTINS=FALSE
        -DCOMPILER_RT_INCLUDE_TESTS=FALSE
        -DLLVM_CONFIG_PATH=""
        -DCMAKE_FIND_ROOT_PATH=${CMAKE_INSTALL_PREFIX}
        -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY
        -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY
        -DSANITIZER_CXX_ABI=libc++
        -DCMAKE_EXE_LINKER_FLAGS_INIT='-lc++abi'
        -DLLVM_ENABLE_PER_TARGET_RUNTIME_DIR=ON
        -DCOMPILER_RT_BUILD_SANITIZERS=OFF
    BUILD_COMMAND ${EXEC} ninja -C <BINARY_DIR>
    INSTALL_COMMAND ${EXEC} ninja -C <BINARY_DIR> install
    LOG_DOWNLOAD 1 LOG_UPDATE 1 LOG_CONFIGURE 1 LOG_BUILD 1 LOG_INSTALL 1
)
cleanup(llvm-host-compiler-rt install)
tc_delete_dir(llvm-host-compiler-rt)
